{"version":3,"sources":["layout.js","Nodes.js","data.js","fetch.js","pages/Recipe.js","pages/Recipes.js","Routes.js","index.js"],"names":["computeLayout","elements","auto","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","addEl","el","isNode","setNode","id","width","height","setEdge","source","target","loopback","filter","n","setGraph","rankdir","align","forEach","layout","res","map","targetPosition","sourcePosition","offset","data","type","console","log","node","x","y","position","Transition","memo","isConnectable","style","padding","label","stepStyle","border","boxShadow","borderRadius","fontSize","color","background","textAlign","Step","styles","input","output","transition","paddingTop","paddingBottom","default","truncateLabel","text","len","length","substring","connect","sourceHandle","animated","processRecipe","recipe","results","step","push","item","test","name","ref","expression","link","loop","from_type","from_name","to_name","find","isLoopback","fetch","axios","create","baseURL","recipeLevels","LayoutFlow","recipeType","navigate","useNavigate","useParams","useState","autoLayout","setAuto","setRecipe","instance","setInstance","setElements","React","useEffect","query","then","catch","useCallback","flow","toObject","className","key","nodesDraggable","onConnect","edge","onElementsRemove","elementsToRemove","els","removeElements","connectionLineType","onLoad","onNodeDoubleClick","_","link_id","path","nodeTypes","top","right","zIndex","onClick","RecipesPage","list","setList","to","marginTop","maxWidth","lineHeight","MyRoutes","element","Recipe","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.66749fdd.chunk.js","sourcesContent":["import dagre from \"dagre\";\nimport { isNode } from \"react-flow-renderer\";\n\nexport const nodeWidth = 170;\nexport const nodeHeight = 45;\n\nconst computeLayout = (elements, auto = false) => {\n\n  const dagreGraph = new dagre.graphlib.Graph();\n  dagreGraph.setDefaultEdgeLabel(() => ({}));\n\n  const addEl = (el) => {\n    if (isNode(el)) {\n      dagreGraph.setNode(el.id, {\n        width: nodeWidth,\n        height: nodeHeight\n      });\n    } else {\n      dagreGraph.setEdge(el.source, el.target);\n    }\n  };\n\n  const loopback = elements.filter((n) => n.loopback);\n  elements = elements.filter((n) => !n?.loopback);\n  dagreGraph.setGraph({\n    rankdir: \"TB\",\n    align: \"UL\",\n    // acyclicer: \"greedy\",\n    // ranker: \"tight-tree\"\n    // ranker: \"longest-path\"\n  });\n\n  elements.forEach(addEl);\n  dagre.layout(dagreGraph);\n\n  const res = elements.map((el) => {\n    if (isNode(el)) {\n      el.targetPosition = \"top\";\n      el.sourcePosition = \"bottom\";\n      let offset = 0;\n      if (\n        el?.data?.type === 'transition' ||\n        el?.type === 'output'\n      ) {\n        offset = 50;\n      }\n      if (el?.type === 'input') {\n        offset = 25;\n      }\n      if (auto) {\n        console.log('using auto coords')\n        const { x, y } = dagreGraph.node(el.id);\n        el.position = { x, y };\n      } else {\n        console.log('using existing coords')\n        el.position = {\n          x: (el.position.x / 4) - offset,\n          y: el.position.y / 3\n        }\n      }\n    }\n\n    return el;\n  });\n  return [...res, ...loopback];\n};\n\nexport default computeLayout;\n","import React, { memo } from \"react\";\nimport { nodeWidth } from './layout';\nimport { Handle } from \"react-flow-renderer\";\n\n\nexport const Transition = memo(({ data, isConnectable = true }) => {\n  // const node = useStoreState((state) => state.transform);\n  // console.log(\"Transition\", node, data);\n  return (\n    <div style={{ padding: \"0.5rem 2rem\", width: nodeWidth }}>\n      <Handle\n        id=\"target\"\n        type=\"target\"\n        position=\"top\"\n        isConnectable={isConnectable}\n      />\n      <div>{data.label}</div>\n      <Handle type=\"source\" position=\"bottom\" isConnectable={isConnectable} />\n    </div>\n  );\n});\n\nconst stepStyle = {\n  border: \"1px solid #eee\",\n  boxShadow: \"0px 2px 8px rgba(8, 35, 48, 0.14)\",\n  borderRadius: \"8px\",\n  fontSize: 12,\n  color: \"#222\",\n  background: \"#fff\",\n  padding: 10,\n  width: nodeWidth,\n  textAlign: \"center\"\n};\n\nexport const Step = memo(({ data, isConnectable = true }) => {\n  // const node = useStoreState((state) => state.transform);\n  // console.log(\"Step\", node, data);\n  return (\n    <div style={stepStyle}>\n      <Handle type=\"target\" position=\"top\" isConnectable={isConnectable} />\n      <div>{data.label}</div>\n      <Handle\n        id=\"source\"\n        type=\"source\"\n        position=\"bottom\"\n        isConnectable={isConnectable}\n      />\n      <Handle\n        id=\"loopback\"\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n    </div>\n  );\n});\n","import { nodeWidth, nodeHeight } from './layout';\nconst edgeType = \"smoothstep\"; // smoothstep, step, default, straight\n\nconst styles = {\n  input: {\n    background: \"#eafce3\",\n    border: 0,\n    width: nodeWidth,\n  },\n  output: {\n    background: \"#ffe6e6\",\n    border: 0,\n    width: nodeWidth\n  },\n  transition: {\n    background: \"#e5efff\",\n    paddingTop: \"0.45rem\",\n    paddingBottom: \"0.45rem\",\n    border: 0,\n    width: nodeWidth\n  },\n  default: {\n    border: \"1px solid #eee\",\n    boxShadow: \"0px 2px 8px rgba(8, 35, 48, 0.14)\",\n    borderRadius: \"8px\",\n    width: nodeWidth\n  }\n};\n\nconst truncateLabel = (text, len = 20) => {\n  if (text.length <= len) {\n    return text;\n  }\n  return text.substring(0, len) + '...'\n}\n\nconst isLoopback = (item, recipe) => {\n  const { from_type, from_name, to_name } = item;\n\n  let source;\n  let target;\n\n  if (from_type === 21) {\n    source = recipe.step.find(n => n.name === from_name);\n    target = recipe.transition.find(n => n.name === to_name);\n  } else {\n    source = recipe.transition.find(n => n.name === from_name);\n    target = recipe.step.find(n => n.name === to_name);\n  }\n\n  if (target?.y < source?.y) {\n    console.log('isLoopback!!!', from_name, '=>', to_name, { source, target });\n    return true\n  }\n\n  return false;\n}\n\nexport const connect = (source, target, loopback = false) => ({\n  id: `e${source}${target}`,\n  source,\n  target,\n  type: edgeType,\n  sourceHandle: loopback ? \"loopback\" : \"source\",\n  loopback,\n  animated: loopback,\n  data: {\n    type: 'link'\n  }\n});\n\nexport const step = item => {\n  const type = /INITIALSTEP/gi.test(item.name)\n      ? 'input'\n      : /TERMINALSTEP/gi.test(item.name)\n        ? 'output'\n        : 'step';\n  return {\n    id: item.name,\n    type,\n    data: {\n      label: truncateLabel(item.name),\n      ref: item,\n      type: 'step'\n    },\n    style: styles[type],\n    position: {\n      x: item.x,\n      y: item.y\n    }\n  }\n};\n\nexport const transition = item => {\n  return {\n    id: item.name,\n    type: 'default',\n    data: {\n      label: truncateLabel(item.expression || item.name),\n      ref: item,\n      type: 'transition'\n    },\n    style: styles.transition,\n    position: {\n      x: item.x,\n      y: item.y\n    }\n  }\n}\n\n\nexport const processRecipe = (recipe) => {\n  const results = [];\n  // Add steps\n  recipe.step.forEach(n =>\n    results.push(step(n))\n  )\n  // Add transitions\n  recipe.transition.forEach(n =>\n    results.push(transition(n))\n  )\n  // Add connections\n  recipe.link.forEach(n => {\n    const loop = isLoopback(n, recipe);\n    results.push(connect(n.from_name, n.to_name, loop))\n  })\n\n  console.log({ recipe })\n\n  return results\n}\n\n\n/*\nconst START_ID = \"Start\";\nconst END_ID = \"End\";\n\nconst test = [\n  // must have a start step\n  step({ id: START_ID, type: \"input\" }),\n\n  // steps\n  transition({ id: \"T1\" }),\n  step({ id: \"A\" }),\n  step({ id: \"B\" }),\n  step({ id: \"B2\" }),\n  step({ id: \"C\" }),\n  transition({ id: \"T2\" }),\n  transition({ id: \"T3\" }),\n\n  // must have an end step\n  step({ id: END_ID, type: \"output\" }),\n\n  // connection aka links\n  connect(START_ID, \"T1\"),\n  connect(\"T1\", \"A\"),\n  connect(\"T1\", \"B\"),\n  connect(\"A\", \"T3\"),\n  connect(\"B\", \"T2\"),\n  connect(\"T2\", \"B2\"),\n  connect(\"T2\", \"C\"),\n  connect(\"C\", \"T3\"),\n  connect(\"B2\", \"T3\"),\n\n  // connect(\"T1\", \"B2\"),\n  connect(\"B\", \"T1\", true),\n  connect(\"B2\", \"T2\", true),\n  // connect(\"B2\", \"T1\", true),\n\n  connect(\"T3\", END_ID)\n];\n*/\n","import axios from \"axios\";\n\nexport const baseURL = \"https://sw-recipe-builder-dev.azurewebsites.net/\";\nconst fetch = axios.create({\n  baseURL,\n});\n\nexport const getRecipes = () => fetch(`recipe`)\nexport const getRecipe = id => fetch(`recipe/${id}`)\nexport const getUnitProcedure = id => fetch(`unit_procedure/${id}`)\nexport const getOperation = id => fetch(`operation/${id}`)\n\nexport default fetch;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useCallback } from \"react\";\nimport ReactFlow, { removeElements } from \"react-flow-renderer\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport { Step, Transition } from \"../Nodes\";\nimport { processRecipe, connect  } from \"../data\";\nimport computeLayout from '../layout';\nimport { getRecipe, getUnitProcedure, getOperation } from '../fetch';\n\n// test data:\n// import mockRecipe from '../data/recipe.json';\n// import mockOperation from '../data/op.json';\n// import mockUnitProcedure from '../data/up.json';\n\nconst recipeLevels = [\n  getRecipe,\n  getUnitProcedure,\n  getOperation\n]\n\nconst LayoutFlow = ({ recipeType = 0 }) => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [autoLayout, setAuto] = useState(false);\n  const [recipe, setRecipe] = useState(null);\n  const [instance, setInstance] = useState(null);\n  const [elements, setElements] = useState(null);\n\n  // fetch recipe by level (recipe, unit procedure, operation)\n  React.useEffect(() => {\n    const query = recipeLevels[recipeType];\n    if (query) {\n      query(id)\n        .then(({ data }) => {\n          console.log('fetch remote data', data);\n          setRecipe(data);\n          setElements(\n            computeLayout(processRecipe(data), autoLayout)\n          );\n        })\n        .catch(console.log)\n    }\n  }, [])\n\n  const toggleAutoLayout = () => {\n    console.log('toggle layout', !autoLayout);\n    setAuto(n => !n);\n    setElements([\n      ...computeLayout(processRecipe(recipe), !autoLayout)\n    ]);\n  }\n\n  const onConnect = ({ source, target, sourceHandle }) => {\n    const edge = connect(source, target, sourceHandle === 'loopback');\n    setElements(n => computeLayout([...n, edge]));\n  }\n\n  const onElementsRemove = (elementsToRemove) => {\n    setElements((els) => removeElements(elementsToRemove, els));\n  }\n\n  const onSave = useCallback(() => {\n    if (instance) {\n      const flow = instance.toObject();\n      console.log(flow)\n    }\n  }, [instance]);\n\n  const handleLoadRecipe = (_, { type, data }) => {\n    if (type === 'step' && data?.ref?.link_id) {\n      let path;\n      switch(recipeType) {\n        case 0: path = 'unit_procedure'; break;\n        case 1: path = 'operation'; break;\n      }\n      if (path) {\n        const id = data.ref.link_id;\n        navigate(`/${path}/${id}`)\n      }\n    }\n  }\n\n  console.log('recipe state', {\n    id,\n    recipeType,\n    recipe,\n    elements\n  })\n\n  if (!elements) {\n    return <div className=\"layoutflow\" style={{ textAlign: 'center', padding: '10rem' }}>\n      Loading...\n    </div>\n  }\n\n  return (\n    <div className=\"layoutflow\" key={`${id}-${recipeType}`}>\n      <ReactFlow\n        nodesDraggable={true}\n        elements={elements}\n        onConnect={onConnect}\n        onElementsRemove={onElementsRemove}\n        connectionLineType=\"step\"\n        onLoad={setInstance}\n        onNodeDoubleClick={handleLoadRecipe}\n        nodeTypes={{\n          step: Step,\n          transition: Transition\n        }}\n      />\n      <div className=\"save__controls\" style={{\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        padding: 20,\n        zIndex: 9999,\n        background: '#eee',\n        color: '#999'\n      }}>\n        {/* <button onClick={onSave}>save</button>\n        &nbsp; | &nbsp; */}\n        <button onClick={toggleAutoLayout}>layout: {autoLayout ? 'auto' : 'existing'}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutFlow;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getRecipes } from \"../fetch\";\n\nexport default function RecipesPage() {\n  const [list, setList] = useState([]);\n\n  React.useEffect(() => {\n    getRecipes()\n      .then(({ data }) => {\n        setList(data);\n      })\n      .catch(console.log);\n  }, [])\n\n  return (\n    <div style={{ padding: '10rem' }}>\n    <h2>Recipes list</h2>\n    <ul id='recipe-list'>\n      {list.map(({ id, name }) =>\n        <li key={`link-${id}-${name}`}>\n          <Link to={`/recipe/${id}`}>{ name }</Link>\n        </li>\n      )}\n    </ul>\n    <div style={{ marginTop: '3rem', maxWidth: '35%', padding: '1.4rem', background: '#e0ffe0', lineHeight: '1.4rem', borderRadius: 4 }}>\n      Note: You can drill down into a STEP by double clicking on it. Navigate using your browser forward / back buttons.\n    </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nimport Recipe from './pages/Recipe';\nimport Recipes from './pages/Recipes';\n\nexport default function MyRoutes() {\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={<Recipes />} />\n        <Route path='/recipe' element={<Recipes />} />\n        <Route\n          path=\"/recipe/:id\"\n          element={<Recipe key='recipe' recipeType={0} />}\n        />\n        <Route\n          path=\"/unit_procedure/:id\"\n          element={<Recipe key='unit_procedure' recipeType={1} />}\n        />\n        <Route\n          path=\"/operation/:id\"\n          element={<Recipe key='operation' recipeType={2} />}\n        />\n      </Routes>\n    </Router>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReactFlowProvider } from \"react-flow-renderer\";\nimport Routes from \"./Routes\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <ReactFlowProvider>\n      <Routes />\n    </ReactFlowProvider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}